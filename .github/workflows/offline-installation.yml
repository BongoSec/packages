name: Offline installation test
on:
  pull_request:
    paths:
      - 'unattended_installer/install_functions/bongosec-offline-download.sh'
  workflow_dispatch:

jobs:
  Build-bongosec-install-script:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v4

      - name: Build bongosec-install script and use staging packages
        working-directory: ./unattended_installer
        run: |
          bash builder.sh -i -d staging

      - uses: actions/upload-artifact@v4
        with:
          name: script
          path: |
            unattended_installer/bongosec-install.sh
          if-no-files-found: error

  Test-offline-installation-debian:
    runs-on: ubuntu-latest
    needs: Build-bongosec-install-script
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: script

      - name: Move unattended script
        run: cp $GITHUB_WORKSPACE/bongosec-install.sh $GITHUB_WORKSPACE/.github/actions/offline-installation/bongosec-install.sh

      - name: Run script
        run: sudo bash $GITHUB_WORKSPACE/.github/actions/offline-installation/offline-installation.sh

  Test-offline-installation-rpm:
    runs-on: ubuntu-latest
    needs: Build-bongosec-install-script
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: script

      - name: Move unattended script
        run: cp $GITHUB_WORKSPACE/bongosec-install.sh $GITHUB_WORKSPACE/.github/actions/offline-installation/bongosec-install.sh

      - name: Launch docker and run script
        run: |
          # Create a temporary Dockerfile to set up CentOS 7 with vault repositories
          cat > Dockerfile.centos7 << 'EOF'
          FROM centos:7
          RUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/*.repo && \
              sed -i 's|#baseurl=http://mirror.centos.org/centos/$releasever|baseurl=http://vault.centos.org/7.9.2009|g' /etc/yum.repos.d/*.repo && \
              yum clean all && \
              yum makecache
          EOF
          
          # Build the custom CentOS 7 image
          docker build -t centos7-vault -f Dockerfile.centos7 .
          
          # Run the container with the custom image
          sudo docker run -v $GITHUB_WORKSPACE/.github/actions/offline-installation/:/tests centos7-vault bash /tests/offline-installation.sh
